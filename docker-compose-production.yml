version: '3.7'
services:
   datenbank_service:
      # Alpine Linux is much smaller than most distribution base images (~5MB),
      # and thus leads to much slimmer images in general.
      # Die Semantik der nachfolgenden Zeilen
      # IMAGE:TAG
      image: postgres:12.2-alpine
      # Pinning-by-digest is best practice because
      #
      #    Tags are mutable, so there is no guarantee a tag will never change.
      #    It guarantees that every instance of the service is running exactly the same code.
      #    It allows you to put an image through QA/testing and verify that that version of the image is approved to go into production.
      #    You can use Docker Content Trust and sign specific versions of the image.
      #    You can roll back to an earlier version of the image, even if that version was not tagged (or "no longer tagged").
      #    Digests also prevent race-conditions; if a new image is pushed while a deploy is in progress,
      #    different nodes may be pulling the images at different times, so some nodes have the new image, some have the old one.
      volumes:
         # Semantik der nachfolgenden Zeilen
         # HOSTVERZEICHNIS:KONTAINERVERZEICHNIS
         - ./db-data:/var/lib/postgresql/data

      environment:
         - POSTGRES_USER=postgres
         - POSTGRES_PASSWORD=/run/secrets/db_credentials
         - POSTGRES_DB=project_dictionary

      secrets:
         - db_credentials

   api_service:
      # in dem aktuellen Ordner wird nach dem Dockerfile gesucht
      # Dockerfile definiert einen standart Kontainer passt es an
      # und Startet die Applikation. Inhalt siehe "Dockerfile"
      build: .
      depends_on:
         - datenbank_service
      ports:
         - 7070:7070
      environment:
         # POSTGRES_DB wird im Quellcode benutzt.
         # Diese Varialben sind vom Container vorgegeben. Siehe Doku dazu.
         # Semantik-> Dockercompose setzt die Environment Variablen
         # damit sind die in dem Programm bekannt.
         - POSTGRES_HOST=datenbank_service
         - POSTGRES_PORT=5432
         - POSTGRES_USER=postgres
         - POSTGRES_PASSWORD=/run/secrets/db_credentials
         - POSTGRES_DB=project_dictionary
         - JAVALIN_PORT=7070

      restart: always

      secrets:
         - db_credentials

secrets:
   db_credentials:
      file: db_passwort_file
